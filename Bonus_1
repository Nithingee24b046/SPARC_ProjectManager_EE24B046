import numpy as np
import matplotlib.pyplot as plt

def BER(snr_dB):
    num_bits = 10000
    Eb = 1  # Energy per bit

    # Generating random bits and map to BPSK symbols
    bits = np.random.randint(0, 2, num_bits)
    symbols = 2 * bits - 1  # BPSK: 0 → -1, 1 → +1

    # Adding AWGN noise
    snr_linear = 10 ** (snr_dB / 10)
    noise_power = Eb / snr_linear
    noise = np.random.normal(0, np.sqrt(noise_power), num_bits)
    received = symbols + noise

    # Corruption
    errors = symbols * received
    num_errors = np.sum(errors < 0)

    # BER
    ber = num_errors / num_bits
    return ber


#Take some 20 values of BER and average them out
#1000 values of SNR between 2 and 10 dB
array_ber = []
for i in range(1000):
    sum = 0
    for j in range(20):
        snr = 2 + 0.008*i
        # noise_power = 2000/((10 ** (snr / 10))**2)
        sum = BER(snr) + sum
    Avg_ber = sum / 20
    array_ber.append(Avg_ber)


#Plot BER vs SNR
SNR = np.linspace(2, 10, 1000)
plt.plot(SNR, array_ber)
plt.xlabel("SNR (dB)")
plt.ylabel("BER")
plt.title("BER vs SNR")
plt.grid()
plt.show()
